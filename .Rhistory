R.version.string
1 + 1
store.number <- 4
store.number
# what structure is the object usinga  function 'str()'
# the () indicate its a function
?str
ha.ha <- "hahhahahahahahah this is funny"
str(store.number)
str(ha.ha)
# step it up, a vector of three elements
t.numbers <- c(3, 5, 8)
t.numbers
str(t.numbers)
# [] indicate the position within the object
t.numbers[2]
# the : a range , e.g. 2,3 = 2:3
t.numbers[2:3]
1:10
# let's get position 1 and 3
t.numbers[ c(1,3)]
# the 'x:y' indicates a range from x to y , e.g. 2,3 = 2:3
t.numbers[c(2:3)]
c(4,4,3,3)
# matrix is .. a matrix. Needs to have multiple columns and rows
?matrix
(t.matrix <- matrix(c(4,4,3,3), 2, 2))
t.matrix
str(t.matrix)
t.matrix
# aaah first fills the columns
# let's give the columns names
colnames(t.matrix) <- c("fours", "threes")
t.matrix
t.matrix$fours
# let's replace
rm(t.matrix)
t.matrix
t.vector <- c(1,66,7,88,4,7)
str(t.vector)
length(t.vector)
t.matrix
(t.matrix <- matrix(c(4,4,3,3), 2, 2))
# let's replace first row, second column
t.matrix[1,2]
# let's replace first row, second column
t.matrix[1,2] <- "gone"
t.matrix
(t.matrix <- matrix(c(4,4,3,3), 2, 2))
str(t.matrix)
# aaah first fills the columns
# let's give the columns names
colnames(t.matrix) <- c("fours", "threes")
t.matrix    # much better
# let's replace first row, second column
t.matrix[1,2] <- NA
t.matrix
# > 1 elements
t.vector <- c(1,66,7,88,4,7)
t.vector
t.char <- c("blue", "red", "blue", "blue", "purple", "red")
t.char
t.data.frame <- cbind.data.frame(t.char, t.vector)
str(t.data.frame)
t.data.frame
t.data.frame$t.char
t.char
t.data.frame
str(t.data.frame)
?as.char
t.data.frame$t.char <- as.character(t.data.frame$t.char)
str(t.data.frame)
for(cntr in 1:10){
# do something
print(i)
}
for(cntr in 1:10){
# do something
print(cntr)
}
for(cntr in 1:10){
# do something
print(cntr)
cntr^2
}
for(cntr in 1:10){
# do something
print(cntr)
(cntr^2)
}
for(cntr in 1:10){
# do something
print(cntr)
print(cntr^2)
}
for(cntr in 1:10){
# do something
if(cntr^2 > 25){
print(cntr^2)
}
}
head(iris)
str(iris)
# let's take the sum of each of the first four columns
apply(iris[,1:4], 2, sum)
# let's take the sum of each of the first four columns
apply(iris[,1:4], 2 sum)
d <- iris[,1:4]
head(d)
length(d)
ncol(d)
i <- 1
d.t <- d[,i]
d.t
class(d.t)
sum.t <- sum(d.t)
sum.t
# let's take the sum of each of the first four columns
apply(iris[,1:4], 2 sum)
# let's take the sum of each of the first four columns
apply(iris[,1:4], 2, sum)
for(i in 1:ncol(d)){
i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
prin(sum.t)
}
for(i in 1:ncol(d)){
i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
print(sum.t)
}
for(i in 1:ncol(d)){
#i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
print(sum.t)
}
i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
print(sum.t)
}
for(i in 1:ncol(d)){
print(i)
i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
print(sum.t)
}
for(i in 1:ncol(d)){
print(i)
#i <- 1
d.t <- d[,i]
class(d.t)
sum.t <- sum(d.t)
print(sum.t)
}
i <- 4
d.t <- d[,i]
d.t
# make  a vector to store the sum values
sum.stored <- rep(NA, ncol(d))
sum.stored
rep(2,10)
i <- 1
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
sum.stored
i <- 2
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
sum.stored
for(i in 1:ncol(d)){
print(i)
#i <- 2
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
}
i
rm(i)
i
for(i in 1:ncol(d)){
print(i)
#i <- 2
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
}
source('~/Dropbox/2018 A 4 Data analyses using R/Data-analyses-in-R-scripts/loops and functions.R', echo=TRUE)
i
i
for(i in 1:ncol(d)){
print(i)
#i <- 2
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
}
i
expl.var <- c(1:nrow(d))
expl.var
i <- 1
plot(expl.var, d.t)
lm(d.t ~ expl.var)
m.t
m.t <- lm(d.t ~ expl.var)
m.t
str(m.t)
m.t$coefficients[1]
m.t$coefficients[2]
abline(m.t)
plot(expl.var, d.t, pch = 19)
plot(expl.var, d.t, pch = 19, col = "purple")
d
plot(NA, xlim = c(0,10), ylim = c(0,10))
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
point(expl.var,d.t, pch = 19)
m.t <- lm(d.t ~ expl.var)
str(m.t)
abline(m.t)
points(expl.var,d.t, pch = 19)
d.t
expl.var
plot(NA, xlim = c(0,150), ylim = c(0,10))
expl.var <- c(1:nrow(d))
print(i)
# i <- 1
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
points(expl.var,d.t, pch = 19)
m.t <- lm(d.t ~ expl.var)
str(m.t)
abline(m.t)
colour.thor <- c("blue", "red", "purple", "green")
plot(NA, xlim = c(0,150), ylim = c(0,10))
colour.thor <- c("blue", "red", "purple", "green")
i <- 1
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
points(expl.var,d.t, pch = 19, col=colour.thor[i])
m.t <- lm(d.t ~ expl.var)
str(m.t)
abline(m.t, col=colour.thor[i])
for(i in 1:ncol(d)){
expl.var <- c(1:nrow(d))
print(i)
# i <- 1
d.t <- d[,i]
class(d.t)
sum.stored[i] <- sum(d.t)
print(sum.t)
points(expl.var,d.t, pch = 19, col=colour.thor[i])
m.t <- lm(d.t ~ expl.var)
str(m.t)
abline(m.t, col=colour.thor[i])
}
sum.stored
getwd()
write.csv(sum.stored,"whateverman.csv")
d
range(d)
plot(d)
plot((1:600),d)
